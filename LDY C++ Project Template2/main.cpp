#include <iostream>


// Указатель - это переменная, созданная для хранения в себе адреса какой-либо области памяти.
// Например, указатель может хранить адрес созданной ранее в программе переменной.




int main() {
	setlocale(LC_ALL, "Russian");
	int n, m;

	// Указатели на переменные
	/*
	n = 10;
	m = 20;
	std::cout << "n = " << n << "\n"; // вывод значения переменной
	std::cout << "&n = " << &n << "\n"; // вывод адреса переменной
	int* pn = &n; // создание указателя, напрпавленного на переменную n
	std::cout << "pn = " << pn << "\n";
	
	// Разыменование указателя - операция, применяемая только к указателям и позволяющая обратиться к объекту, на который направлен указатель.
	std::cout << "*pn = " << *pn << "\n";
	*pn = 15; // обращение к переменной n через разыменование указателя pn
	std::cout << "Новая n = " << n << "\n";
	
	pn = &m; // перенаправление указателя на переменную n
	std::cout << "&m = " << &m << std::endl;
	std::cout << "pn = " << pn << std::endl;

	int* pm = &m;
	std::cout << "pm = " << pm << std::endl;
	*pm = 25;

	std::cout << "m = " << m << std::endl;
	std::cout << "*pn = " << *pn << std::endl;
	std::cout << "*pm = " << *pm << std::endl;
	*/

	const int s = 5;
	int arr[s]{ 5, 123, 3, -500, 1235674 };
	int* pa2 = &arr[2];
	std::cout << "*pa2 = " << *pa2 << std::endl;
	pa2++;
	std::cout << "*pa2 = " << *pa2 << std::endl;
	// Арифметика указателей - это процесс сдвига указателей, относительно их текущего значения вперед или назад в зависимости от применяемого к ним сложения или вычитания соответственно.
	pa2 -= 2;
	std::cout << "*pa2 = " << *pa2 << std::endl;
	// Ограничения арифметики указателей:
	//	1) Работает только со сложением и вычитанием;
	//	2) Нельзя складывать адреса, но можно вычитать адреса;
	//	3) Нельзя работать с вещественным типом данных;

	pa2 = &arr[0];
	// Вывод массива с помощью указателей:
	for (int i{}; i < s; i++)
		std::cout << *(pa2 + i) << " ";
	std::cout << std::endl;




	return 0;
}